# Generated by Django 4.2.7 on 2023-11-10 23:28

from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import wagtail.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0089_log_entry_data_json_null_to_object'),
        ('wagtailimages', '0025_alter_image_file_alter_rendition_file'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('sort_order', models.IntegerField(blank=True, editable=False, null=True)),
                ('event_date', models.DateField(blank=True, null=True)),
                ('time_from', models.TimeField(null=True)),
                ('time_to', models.TimeField(null=True)),
                ('description', wagtail.fields.RichTextField(blank=True, max_length=1500, null=True)),
                ('repeats', models.CharField(blank=True, choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('YEARLY', 'Yearly'), ('CUSTOM', 'Custom')], max_length=20, null=True)),
                ('until', models.DateField(blank=True, null=True)),
                ('week_interval', models.IntegerField(blank=True, choices=[(1, 'The First'), (2, 'The Second'), (3, 'The Third'), (4, 'The Fourth'), (-1, 'The Last')], null=True)),
                ('weekday', models.CharField(blank=True, choices=[('Sunday', 'Sunday'), ('Monday', 'Monday'), ('Tuesday', 'Tuesday'), ('Wednesday', 'Wednesday'), ('Thursday', 'Thursday'), ('Friday', 'Friday'), ('Saturday', 'Saturday')], max_length=20, null=True)),
                ('featured_on_home_page', models.BooleanField(default=True)),
                ('repeating_dates', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, help_text='Enter a location where the event will happen', max_length=500, null=True)),
                ('tutorial_link', models.CharField(blank=True, help_text='for showing Niche Academy Links or similar', max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page', models.Model),
        ),
        migrations.CreateModel(
            name='EventAudience',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audience_name', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category_name', models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FullCalendarLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('link_to_calendar', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='wagtailcore.page')),
            ],
        ),
        migrations.CreateModel(
            name='ExceptionDate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exception_date', models.DateField()),
                ('event', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='exception_dates', to='library_programs.event')),
            ],
        ),
        migrations.CreateModel(
            name='EventAge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('age_range', models.CharField(blank=True, max_length=300, null=True)),
                ('audience_name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='library_programs.eventaudience')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='event',
            name='age_range',
            field=modelcluster.fields.ParentalManyToManyField(blank=True, to='library_programs.eventage'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_category',
            field=modelcluster.fields.ParentalKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_category', to='library_programs.eventcategory'),
        ),
        migrations.AddField(
            model_name='event',
            name='event_image',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image'),
        ),
        migrations.AddField(
            model_name='event',
            name='form_page',
            field=models.ForeignKey(blank=True, help_text='Select a Form that will be embedded on this page.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='embedded_form_page', to='wagtailcore.page'),
        ),
    ]
